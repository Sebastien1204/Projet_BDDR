# -*- coding: utf-8 -*-
"""
Created on Sun Apr  2 21:27:17 2023

@author: Sébastien
"""

"""
Les données  des titres  ont été ajoutés à cette table pour simple vérification du script de peuplement. lls seront bien entendu supprimés lors de la version finale et seront ajoutés dans une table différente qui est en cours de peuplement.
"""

import pandas as pd
import json
import csv
import os
import time
import psycopg2
import operator as op

temps = time.time()

import numpy
from psycopg2.extensions import register_adapter, AsIs

def addapt_numpy_float64(numpy_float64):
    return AsIs(numpy_float64)

def addapt_numpy_int64(numpy_int64):
    return AsIs(numpy_int64)

register_adapter(numpy.float64, addapt_numpy_float64)
register_adapter(numpy.int64, addapt_numpy_int64)

path = r"C:/Users/Sébastien/Desktop/data_final.csv"

with open(path , encoding="utf8") as file:
    reader = csv.reader(file)
    data = []
    for ligne in reader :
        data.append(ligne)
    
def auteurs(taille):
    liste_auteurs = []
    liste_fichiers_pdf = []
    liste_fichiers_pmc = []
    path_2 = r"C:/Users/Sébastien/Desktop/Projet BDDR 2/document_parses"
    liste_fichiers_pdf_2 = os.listdir(path_2 + '/pdf_json')
    liste_fichiers_pmc_2 = os.listdir(path_2 + '/pmc_json')
    path = r"C:/Users/Sébastien/Desktop/data_final.csv"
    
    with open(path , encoding="utf8") as file:
        reader = csv.reader(file)
        
        L = []
        for ligne in reader :
            L.append(ligne)
            
        indice_auteurs = 0
        while(L[0][indice_auteurs] != 'authors'):
            indice_auteurs += 1
            
        indice_titre = 0
        while(L[0][indice_titre] != 'title'):
            indice_titre += 1
                
        indice_pdf = 0
        while(L[0][indice_pdf] != 'pdf'):
            indice_pdf += 1
            
        for k in range (1,len(L)):
            if (L[k][indice_pdf] != ""):
                if ';' in L[k][indice_pdf]:
                    nb_info_pdf_0 = 0
                    for i in range(len(L[k][indice_pdf].split(';'))):
                        nb_info_pdf = 0
                        with open('C:/Users/Sébastien/Desktop/Projet BDDR 2/' + L[k][indice_pdf].split(';')[i].strip() , encoding="utf8") as file:
                            reader = json.load(file)
                        
                            if (len(reader["metadata"]["authors"]) > 0):
                        
                                for j in range(len(reader["metadata"]["authors"])):
                                    if (reader["metadata"]["authors"][j]["first"] != ""):
                                        nb_info_pdf += 1
                                    if (reader["metadata"]["authors"][j]["middle"] != ""):
                                        nb_info_pdf += 1
                                    if (reader["metadata"]["authors"][j]["last"] != ""):
                                        nb_info_pdf += 1
                                    if (reader["metadata"]["authors"][j]["email"] != "" and reader["metadata"]["authors"][j]["email"] != None):
                                        nb_info_pdf += 1
                                    if (len(reader["metadata"]["authors"][j]["affiliation"]) >= 1 ):
                                        if (reader["metadata"]["authors"][j]["affiliation"]["institution"] != ""):
                                            nb_info_pdf += 1
                                        if (reader["metadata"]["authors"][j]["affiliation"]["laboratory"] != ""):
                                            nb_info_pdf += 1
                            else:
                                nb_info_pdf = 0
                                
                        if (nb_info_pdf >= nb_info_pdf_0):
                            nb_info_pdf_0 = nb_info_pdf
                            if (i == 0):
                                liste_fichiers_pdf.append('C:/Users/Sébastien/Desktop/Projet BDDR 2/' + L[k][indice_pdf].split(';')[i].strip())
                            elif (i >= 1):
                                liste_fichiers_pdf.pop()
                                liste_fichiers_pdf.append('C:/Users/Sébastien/Desktop/Projet BDDR 2/' + L[k][indice_pdf].split(';')[i].strip())
                       
                else :
                    liste_fichiers_pdf.append('C:/Users/Sébastien/Desktop/Projet BDDR 2/' + L[k][indice_pdf].strip())
            else :
                liste_fichiers_pdf.append('')
            
                    
        indice_pmc = 0
        while(L[0][indice_pmc] != 'pmc'):
            indice_pmc += 1
            
        for k in range (1,len(L)):
            if (L[k][indice_pmc] != ""):
                if ';' in L[k][indice_pmc]:
                    for i in range(len(L[k][indice_pmc].split(';'))):
                        liste_fichiers_pmc.append('C:/Users/Sébastien/Desktop/Projet BDDR 2/' + L[k][indice_pmc].split(';')[i].strip())
                else :
                    liste_fichiers_pmc.append('C:/Users/Sébastien/Desktop/Projet BDDR 2/' + L[k][indice_pmc].strip())
            else :
                liste_fichiers_pmc.append('')   
                

        for k in range(taille):
            
            nb_info_pdf = 0
            nb_info_pmc = 0
            
            if (len(liste_fichiers_pdf[k].split('/')) == 8 and liste_fichiers_pdf[k].split('/')[7] in liste_fichiers_pdf_2):
                with open(liste_fichiers_pdf[k] , encoding="utf8") as file:
                    reader = json.load(file)
                    
                    if (len(reader["metadata"]["authors"]) > 0):
                        
                        for j in range(len(reader["metadata"]["authors"])):
                            if (reader["metadata"]["authors"][j]["first"] != ""):
                                nb_info_pdf += 1
                            if (reader["metadata"]["authors"][j]["middle"] != ""):
                                nb_info_pdf += 1
                            if (reader["metadata"]["authors"][j]["last"] != ""):
                                nb_info_pdf += 1
                            if (reader["metadata"]["authors"][j]["email"] != "" and reader["metadata"]["authors"][j]["email"] != None):
                                nb_info_pdf += 1
                            if (len(reader["metadata"]["authors"][j]["affiliation"]) >= 1 ):
                                if (reader["metadata"]["authors"][j]["affiliation"]["institution"] != ""):
                                    nb_info_pdf += 1
                                if (reader["metadata"]["authors"][j]["affiliation"]["laboratory"] != ""):
                                    nb_info_pdf += 1
                    
            
            if (len(liste_fichiers_pmc[k].split('/')) == 8 and liste_fichiers_pmc[k].split('/')[7] in liste_fichiers_pmc_2):
                with open(liste_fichiers_pmc[k] , encoding="utf8") as file:
                    reader = json.load(file)
                
                    if (len(reader["metadata"]["authors"]) > 0):
                        
                        for j in range(len(reader["metadata"]["authors"])):
                            if (reader["metadata"]["authors"][j]["first"] != ""):
                                nb_info_pmc += 1
                            if (reader["metadata"]["authors"][j]["middle"] != ""):
                                nb_info_pmc += 1
                            if (reader["metadata"]["authors"][j]["last"] != ""):
                                nb_info_pmc += 1
                            if (reader["metadata"]["authors"][j]["email"] != "" and reader["metadata"]["authors"][j]["email"] != None):
                                nb_info_pmc += 1
                            if (len(reader["metadata"]["authors"][j]["affiliation"]) >= 1 ):
                                if (reader["metadata"]["authors"][j]["affiliation"]["institution"] != ""):
                                    nb_info_pmc += 1
                                if (reader["metadata"]["authors"][j]["affiliation"]["laboratory"] != ""):
                                    nb_info_pmc += 1
                
            if (nb_info_pdf > nb_info_pmc):
                with open(liste_fichiers_pdf[k] , encoding="utf8") as file :
                    reader = json.load(file)
                    if (len(reader["metadata"]["authors"]) > 0):
                        for j in range(len(reader["metadata"]["authors"])):
                            liste_1_titre = []
                            liste_1_titre.append(L[k+1][indice_titre])
                            liste_1_titre.append(reader["metadata"]["authors"][j]["first"])
                            if (len(reader["metadata"]["authors"][j]["middle"]) >= 1):
                                liste_1_titre.append(''.join(reader["metadata"]["authors"][j]["middle"][0]))
                            else:
                                liste_1_titre.append('')
                            liste_1_titre.append(reader["metadata"]["authors"][j]["last"])
                            if (reader["metadata"]["authors"][j]["email"] == None):
                                liste_1_titre.append('')
                            else : 
                                liste_1_titre.append(reader["metadata"]["authors"][j]["email"])
                            if (reader["metadata"]["authors"][j]["affiliation"] != {}):
                                liste_1_titre.append(reader["metadata"]["authors"][j]["affiliation"]["institution"])
                                liste_1_titre.append(reader["metadata"]["authors"][j]["affiliation"]["laboratory"])
                            else:
                                liste_1_titre.append('')
                                liste_1_titre.append('')
                            liste_auteurs.append(liste_1_titre)
                            
                                
            elif (nb_info_pmc > nb_info_pdf):
                with open(liste_fichiers_pmc[k] , encoding="utf8") as file :
                    reader = json.load(file)
                    if (len(reader["metadata"]["authors"]) > 0):
                        for j in range(len(reader["metadata"]["authors"])):
                            liste_1_titre = []
                            liste_1_titre.append(L[k+1][indice_titre])
                            liste_1_titre.append(reader["metadata"]["authors"][j]["first"])
                            if (len(reader["metadata"]["authors"][j]["middle"]) >= 1):
                                liste_1_titre.append(''.join(reader["metadata"]["authors"][j]["middle"][0]))
                            else:
                                liste_1_titre.append('')
                            liste_1_titre.append(reader["metadata"]["authors"][j]["last"])
                            if (reader["metadata"]["authors"][j]["email"] == None):
                                liste_1_titre.append('')
                            else:
                                liste_1_titre.append(reader["metadata"]["authors"][j]["email"])
                            if (reader["metadata"]["authors"][j]["affiliation"] != {}):
                                liste_1_titre.append(reader["metadata"]["authors"][j]["affiliation"]["institution"])
                                liste_1_titre.append(reader["metadata"]["authors"][j]["affiliation"]["laboratory"])
                            else:
                                liste_1_titre.append('')
                                liste_1_titre.append('')
                            liste_auteurs.append(liste_1_titre)
              
            elif (nb_info_pmc == nb_info_pdf and nb_info_pmc != 0):
                with open(liste_fichiers_pmc[k] , encoding="utf8") as file :
                    reader = json.load(file)
                    if (len(reader["metadata"]["authors"]) > 0):
                        for j in range(len(reader["metadata"]["authors"])):
                            liste_1_titre = []
                            liste_1_titre.append(L[k+1][indice_titre])
                            liste_1_titre.append(reader["metadata"]["authors"][j]["first"])
                            if (len(reader["metadata"]["authors"][j]["middle"]) >= 1):
                                liste_1_titre.append(''.join(reader["metadata"]["authors"][j]["middle"][0]))
                            else:
                                liste_1_titre.append('')
                            liste_1_titre.append(reader["metadata"]["authors"][j]["last"])
                            if (reader["metadata"]["authors"][j]["email"] == None):
                                liste_1_titre.append('')
                            else:
                                liste_1_titre.append(reader["metadata"]["authors"][j]["email"])
                            if (reader["metadata"]["authors"][j]["affiliation"] != {}):
                                liste_1_titre.append(reader["metadata"]["authors"][j]["affiliation"]["institution"])
                                liste_1_titre.append(reader["metadata"]["authors"][j]["affiliation"]["laboratory"])
                            else:
                                liste_1_titre.append('')
                                liste_1_titre.append('')
                            liste_auteurs.append(liste_1_titre)

                               
            else :
                if (liste_fichiers_pdf[k] == '' and liste_fichiers_pmc[k] == ''):
                    if (L[k+1][indice_auteurs] != ""):
                        if (";" in L[k+1][indice_auteurs]):
                            for i in range(len(L[k+1][indice_auteurs].split(';'))):
                                if ("," in L[k+1][indice_auteurs].split(';')[i]):
                                    liste_1_titre = []
                                    liste_1_titre.append(L[k+1][indice_titre])
                                    if (len(L[k+1][indice_auteurs].split(';')[i].split(',')) >= 2):
                                        liste_1_titre.append(L[k+1][indice_auteurs].split(';')[i].split(',')[1].strip())
                                        liste_1_titre.append('')
                                        liste_1_titre.append(L[k+1][indice_auteurs].split(';')[i].split(',')[0].strip())
                                    elif (len(L[k+1][indice_auteurs].split(';')[i].split(',')) == 1):
                                        liste_1_titre.append(L[k+1][indice_auteurs].split(';')[i].split(',')[0].strip())
                                        liste_1_titre.append('')
                                        liste_1_titre.append('')
                                    else :
                                        liste_1_titre.append('')
                                        liste_1_titre.append('')
                                        liste_1_titre.append('')
                                    liste_1_titre.append('')
                                    liste_1_titre.append('')
                                    liste_1_titre.append('')
                                    liste_auteurs.append(liste_1_titre)
                                else:
                                    liste_1_titre = []
                                    liste_1_titre.append(L[k+1][indice_titre])
                                    liste_1_titre.append(L[k+1][indice_auteurs].split(';')[i])
                                    liste_1_titre.append('')
                                    liste_1_titre.append('')
                                    liste_1_titre.append('')
                                    liste_1_titre.append('')
                                    liste_1_titre.append('')
                                    liste_auteurs.append(liste_1_titre)
                            
                    else:
                        liste_1_titre = []
                        liste_1_titre.append(L[k+1][indice_titre])
                        if ("," in  L[k+1][indice_auteurs]):
                            if (len(L[k+1][indice_auteurs].split(',')) >= 2):
                                liste_1_titre.append(L[k+1][indice_auteurs].split(',')[1].strip())
                                liste_1_titre.append('')
                                liste_1_titre.append(L[k+1][indice_auteurs].split(',')[0].strip())
                            elif (len(L[k+1][indice_auteurs].split(',')) == 1):
                                liste_1_titre.append(L[k+1][indice_auteurs].strip())
                                liste_1_titre.append('')
                                liste_1_titre.append('')
                            else :
                                liste_1_titre.append('')
                                liste_1_titre.append('')
                                liste_1_titre.append('')
                            liste_1_titre.append('')
                            liste_1_titre.append('')
                            liste_1_titre.append('')
                            liste_auteurs.append(liste_1_titre)
                        else :
                            liste_1_titre = []
                            liste_1_titre.append(L[k+1][indice_titre])
                            liste_1_titre.append('')
                            liste_1_titre.append('')
                            liste_1_titre.append('')
                            liste_1_titre.append('')
                            liste_1_titre.append('')
                            liste_1_titre.append('')
                            liste_auteurs.append(liste_1_titre)
                        
                else:
                    liste_1_titre = []
                    liste_1_titre.append(L[k+1][indice_titre])
                    liste_1_titre.append('')
                    liste_1_titre.append('')
                    liste_1_titre.append('')
                    liste_1_titre.append('')
                    liste_1_titre.append('')
                    liste_1_titre.append('')
                    liste_auteurs.append(liste_1_titre)   
    
    return liste_auteurs

taille_des_donnees = len(data)-1
L = auteurs(taille_des_donnees)

compteur_titre = 1

conn = psycopg2.connect(
    dbname = "sebnoel",
    user = "postgres",
    password = "sebnoel",
    host = "localhost", 
    port = '5432')

cur = conn.cursor()

cur.execute("""DROP TABLE IF EXISTS Auteur2 CASCADE;
            CREATE TABLE Auteur2 ( Auteur_id INT PRIMARY KEY, Article_id INT, Titre VARCHAR(10485760), Nom VARCHAR(10485760), Prenom VARCHAR(10485760), Mail VARCHAR(10485760), Institution VARCHAR(10485760), Laboratoire VARCHAR(10485760) ) ;""")
                      
            
for i in range (len(L)):
    if (L[i][1] != ""):
        if (i < len(L)-1):
            if(L[i][0] == L[i+1][0]):
                cur.execute("""INSERT INTO Auteur2 
                            (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                            VALUES
                            (%s,%s,%s,%s,%s,%s,%s,%s)
                            """,
                            (i+1,compteur_titre,L[i][0],L[i][3],(L[i][1]+" "+L[i][2]).strip(),L[i][4],L[i][5],L[i][6]))
            else :
                cur.execute("""INSERT INTO Auteur2 
                            (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                            VALUES
                            (%s,%s,%s,%s,%s,%s,%s,%s)
                            """,
                            (i+1,compteur_titre,L[i][0],L[i][3],(L[i][1]+" "+L[i][2]).strip(),L[i][4],L[i][5],L[i][6]))
                compteur_titre += 1
        else :
            if (L[i][0] == L[i-1][0]):
                cur.execute("""INSERT INTO Auteur2 
                            (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                            VALUES
                            (%s,%s,%s,%s,%s,%s,%s,%s)
                            """,
                            (i+1,compteur_titre,L[i][0],L[i][3],(L[i][1]+" "+L[i][2]).strip(),L[i][4],L[i][5],L[i][6]))
            else:
                cur.execute("""INSERT INTO Auteur2 
                            (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                            VALUES
                            (%s,%s,%s,%s,%s,%s,%s,%s)
                            """,
                            (i+1,compteur_titre,L[i][0],L[i][3],(L[i][1]+" "+L[i][2]).strip(),L[i][4],L[i][5],L[i][6]))
                compteur_titre += 1
    else:
        if (i < len(L)-1):
            if(L[i][0] == L[i+1][0]):
                cur.execute("""INSERT INTO Auteur2 
                            (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                            VALUES
                            (%s,%s,%s,%s,%s,%s,%s,%s)
                            """,
                            (i+1,compteur_titre,L[i][0],'','','','',''))
            else :
                cur.execute("""INSERT INTO Auteur2 
                            (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                            VALUES
                            (%s,%s,%s,%s,%s,%s,%s,%s)
                            """,
                            (i+1,compteur_titre,L[i][0],'','','','','')) 
                compteur_titre += 1
        else :
            if (L[i][0] == L[i-1][0]):
                cur.execute("""INSERT INTO Auteur2 
                            (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                            VALUES
                            (%s,%s,%s,%s,%s,%s,%s,%s)
                            """,
                            (i+1,compteur_titre,L[i][0],'','','','',''))
            else :
                cur.execute("""INSERT INTO Auteur2 
                            (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                            VALUES
                            (%s,%s,%s,%s,%s,%s,%s,%s)
                            """,
                            (i+1,compteur_titre,L[i][0],'','','','','')) 
                compteur_titre += 1

cur.execute("SELECT * FROM Auteur2;")

cur.execute("DROP TABLE IF EXISTS Auteur CASCADE;")
cur.execute("CREATE TABLE Auteur AS SELECT * FROM Auteur2 ORDER BY nom ASC, prenom ASC, article_id ASC;")

cur.execute("DROP TABLE IF EXISTS Auteur2 CASCADE;")

df = pd.read_sql('SELECT * FROM Auteur', conn)

compteur_auteur = 1

cur.execute("TRUNCATE TABLE Auteur;")


for i in range(len(df)):
    if (i < len(df)-1):
        if (df['nom'][i]+" "+df['prenom'][i] == df['nom'][i+1]+" "+df['prenom'][i+1]):
            cur.execute("""INSERT INTO Auteur 
                        (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                        VALUES
                        (%s,%s,%s,%s,%s,%s,%s,%s)
                        """,
                        (compteur_auteur,df['article_id'][i],df['titre'][i],df['nom'][i],df['prenom'][i],df['mail'][i],df['institution'][i],df['laboratoire'][i]))
        else :
            cur.execute("""INSERT INTO Auteur 
                        (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                        VALUES
                        (%s,%s,%s,%s,%s,%s,%s,%s)
                        """,
                        (compteur_auteur,df['article_id'][i],df['titre'][i],df['nom'][i],df['prenom'][i],df['mail'][i],df['institution'][i],df['laboratoire'][i]))
            compteur_auteur += 1
    else:
        if (df['nom'][i-1]+" "+df['prenom'][i-1] == df['nom'][i]+" "+df['prenom'][i]):
            cur.execute("""INSERT INTO Auteur 
                        (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                        VALUES
                        (%s,%s,%s,%s,%s,%s,%s,%s)
                        """,
                        (compteur_auteur,df['article_id'][i],df['titre'][i],df['nom'][i],df['prenom'][i],df['mail'][i],df['institution'][i],df['laboratoire'][i]))
        else :
            cur.execute("""INSERT INTO Auteur 
                        (Auteur_id, Article_id, Titre, Nom, Prenom, Mail, Institution, Laboratoire)
                        VALUES
                        (%s,%s,%s,%s,%s,%s,%s,%s)
                        """,
                        (compteur_auteur,df['article_id'][i],df['titre'][i],df['nom'][i],df['prenom'][i],df['mail'][i],df['institution'][i],df['laboratoire'][i]))
            compteur_auteur += 1
            
cur.close()
conn.commit()
conn.close()
print(time.time()-temps)
