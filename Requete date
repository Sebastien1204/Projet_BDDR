     if (len(date_debut) > 7):
        date_1 = datetime.strptime(date_debut, format1)
    elif(len(date_debut) <= 7 and len(date_debut) > 4):
        date_1 = datetime.strptime(date_debut, format1)
    else :
        date_1 = datetime.strptime(date_debut, format1)

    if (len(date_fin) > 7):
        date_2 = datetime.strptime(date_fin, format1)
    elif(len(date_fin) <= 7 and len(date_fin) > 4):
        date2 = datetime.strptime(date_fin, format2)
        date_2 = date2.replace(month = date2.month + 1) - timedelta(1)

    else :
        date2 = datetime.strptime(date_fin, format3)
        date_2 = date2.replace(year = date2.year + 1)- timedelta(1)


    liste_dates_dans_base_de_donnees = []

    for i in range(dates.objects.count()):
        liste_dates_dans_base_de_donnees.append(dates.objects.values_list('date')[i][0])



    intervalle_jour = (date_2 - date_1).days + 1
    liste_quantites_intervalle = []

    if (len(date_debut) > 7):
        liste_dates_intervalle = []
        for i in range(intervalle_jour):
            jour = date_1 + timedelta(i)
            liste_dates_intervalle.append(datetime.strftime(jour, format1))
            if(jour in liste_dates_dans_base_de_donnees):
                liste_quantites_intervalle.append(dates_qs.get(date=jour).quantite)
            else:
                liste_quantites_intervalle.append(0)

    elif(len(date_debut) <= 7 and len(date_debut) > 4):
        intervalle = date_2.month - date_1.month + 1
        liste_dates_intervalle = []
        liste_dates_intervalle.append(date_debut)
        liste_quantites_intervalle = [0] * intervalle
        for i in range(1,intervalle):
            date = datetime.strptime(liste_dates_intervalle[i-1], format2)
            if(date.month >= 12):
                a = date.replace(year=date.year+1,month=1)
            else :
                a = date.replace(month=date.month+1)
            liste_dates_intervalle.append(datetime.strftime(a, format2))
            if a in liste_dates_dans_base_de_donnees
                liste_quantites_intervalle[i] += dates_qs.get(date=(datetime.strftime(a, format2))).quantite
        k = -1
        for i in range(intervalle_jour):
            jour = date_1 + timedelta(i)
            if jour.day == 1:
                k+=1
            if(jour in liste_dates_dans_base_de_donnees):
                liste_quantites_intervalle[k] += dates_qs.get(date=(datetime.strftime(a, format1))).quantite


    else :
        intervalle = date_2.year - date_1.year + 1
        liste_dates_intervalle = []
        liste_quantites_intervalle = [0] * intervalle
        for i in range(intervalle):
            liste_dates_intervalle.append(datetime.strftime(date_1 + timedelta(366*i), format3))
            if datetime.strftime(date_1 + timedelta(366*i), format3) in liste_dates_dans_base_de_donnees:
                liste_quantites_intervalle[i] += dates_qs.get(date=datetime.strftime(date_1 + timedelta(366*i), format3)).quantite
        k=-1
        for i in range(intervalle_jour):
            jour = date_1 + timedelta(i)
            if jour.day == 1 and jour.month == 1:
                k+=1
            if(jour in liste_dates_dans_base_de_donnees):
                liste_quantites_intervalle[k] += dates_qs.get(date=(datetime.strftime(a, format1))).quantite

    dates_qs = dates_qs.filter(Q(Q(date__in=liste_dates_intervalle)))

    dates_qs = dates_qs.order_by('date')
